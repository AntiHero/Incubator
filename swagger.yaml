openapi: 3.0.3
info:
  title: Swagger CarStore
  version: 1.0.0
paths:
  /:
    get:
      tags:
        - home
      summary: Home page
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
                example: '<h1>Hello, Express</h1>'
  /cars:
    get:
      tags:
        - cars
      summary: Get all cars
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    post:
      tags:
        - cars
      summary: Create a car
      requestBody:
        description: Create a new car
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'          
        '400':
          description: Invalid object supplied
  /cars/{carId}:
    put:
      tags:
        - cars
      summary: Update an existing car
      parameters:
      - name: carId
        in: path
        description: ID of car that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update an existing car
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'          
        '400':
          description: Id not found
    delete:
      tags:
        - cars
      summary: Delete an existing car
      parameters:
      - name: carId
        in: path
        description: ID of car that needs to be deketed
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          content:
            text/raw:
              schema:
                type: string
                example: '{Id} has been successfully deleted'
        '400':
          description: Id not found
components:
  schemas:
    Car:
      type: object
      properties:
        make:
          type: string
          example: BMW
          description: Car make
        model:
          type: string
          example: E46
          description: Car model
        engine:
          type: string
          example: M57D30
          description: Car engine
        color:
          type: string
          example: '317'
          description: Car color
        year:
          type: string
          example: '2002'
          description: Car year
